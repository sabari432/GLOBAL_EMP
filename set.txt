; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "GLOBAL"
#define MyAppVersion "1.5"
#define MyAppExeName "APP.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
AppId={{C27F43E7-0E13-4BDD-B75F-8D58C3383804}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
OutputDir=C:\GLOBAL
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\GLOBAL\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\ApplicationTracker.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\IT.jpg"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\IT-1.jpg"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\jna-5.12.1.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\jna-5.14.0.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\jna-platform-5.12.1.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\jna-platform-5.14.0.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\jnativehook-2.1.0.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\log4j-1.2-api-2.23.1.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\log4j-api-2.23.1.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\log4j-core-2.23.1.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\mysql-connector-j-9.0.0.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\oshi-core-6.2.2.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\slf4j-api-2.0.13.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\GLOBAL\sqlite-jdbc-3.46.0.0.jar"; DestDir: "{app}"; Flags: ignoreversion

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"; Parameters: "-Dlog4j.configurationFile={app}\log4j2.xml"
Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"; Parameters: "-Dlog4j.configurationFile={app}\log4j2.xml"
Name: "{userstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"; Parameters: "-Dlog4j.configurationFile={app}\log4j2.xml"

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent; Parameters: "-Dlog4j.configurationFile={app}\log4j2.xml"

[Code]
const
  JDKDownloadURL = 'https://www.oracle.com/java/technologies/javase/jdk21-archive-downloads.html';
  JREDownloadURL = 'https://www.java.com/en/download/manual.jsp';  // Update with actual JRE download URL if available
  JDKFilePath = 'C:\Program Files\java';  // Modify as needed
  JREFilePath = 'C:\Program Files\java\jre1.8.0_421';  // Modify as needed

function IsJDKInstalled(): Boolean;
begin
  Result := DirExists(ExpandConstant(JDKFilePath));
  if Result then
    Log('JDK found at ' + ExpandConstant(JDKFilePath))
  else
    Log('JDK not found.');
end;

function IsJREInstalled(): Boolean;
begin
  Result := FileExists(ExpandConstant(JREFilePath + '\bin\java.exe'));
  if Result then
    Log('JRE found at ' + ExpandConstant(JREFilePath + '\bin\java.exe'))
  else
    Log('JRE not found.');
end;

procedure InitializeWizard();
var
  Dummy: Integer;
begin
  if not IsJDKInstalled() then
  begin
    if MsgBox('JDK is not installed. Do you want to download and install JDK?', mbConfirmation, MB_YESNO) = IDYES then
    begin
      ShellExec('', JDKDownloadURL, '', '', SW_SHOWNORMAL, ewNoWait, Dummy);
      MsgBox('Please install the JDK and then re-run this setup.', mbInformation, mb_OK);
      Abort();
    end
    else
    begin
      MsgBox('JDK installation is required to proceed. Exiting setup.', mbError, mb_OK);
      Abort();
    end;
  end
  else
  begin
    MsgBox('JDK is already installed. Proceeding with installation...', mbInformation, mb_OK);
  end;

  if not IsJREInstalled() then
  begin
    if MsgBox('JRE is not installed. Do you want to download and install JRE?', mbConfirmation, MB_YESNO) = IDYES then
    begin
      ShellExec('', JREDownloadURL, '', '', SW_SHOWNORMAL, ewNoWait, Dummy);
      MsgBox('Please install the JRE and then re-run this setup.', mbInformation, mb_OK);
      Abort();
    end
    else
    begin
      MsgBox('JRE installation is required to proceed. Exiting setup.', mbError, mb_OK);
      Abort();
    end;
  end
  else
  begin
    MsgBox('JRE is already installed. Proceeding with installation...', mbInformation, mb_OK);
  end;
end;

